#include "main.h"

int _putchar(char c)
{
    return (write(1, &c, 1));
}

int _islower(int c)
{
    return (c >= 'a' && c <= 'z');
}

int _isalpha(int c)
{
    return ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'));
}

int _abs(int n)
{
    return (n < 0 ? -n : n);
}

int _isupper(int c)
{
    return (c >= 'A' && c <= 'Z');
}

int _isdigit(int c)
{
    return (c >= '0' && c <= '9');
}

int _strlen(char *s)
{
    int i = 0;

    while (s[i])
        i++;
    return (i);
}

void _puts(char *s)
{
    int i = 0;

    while (s[i])
    {
        _putchar(s[i]);
        i++;
    }
    _putchar('\n');
}

char *_strcpy(char *dest, char *src)
{
    int i = 0;

    while (src[i])
    {
        dest[i] = src[i];
        i++;
    }
    dest[i] = '\0';
    return (dest);
}

int _atoi(char *s)
{
    int res = 0;
    int sign = 1;
    int i = 0;

    if (s[0] == '-')
    {
        sign = -1;
        i++;
    }
    for (; s[i]; i++)
    {
        res = res * 10 + s[i] - '0';
    }
    return (sign * res);
}

char *_strcat(char *dest, char *src)
{
    int dest_len = _strlen(dest);
    int i = 0;

    while (src[i])
    {
        dest[dest_len + i] = src[i];
        i++;
    }
    dest[dest_len + i] = '\0';
    return (dest);
}

char *_strncat(char *dest, char *src, int n)
{
    int dest_len = _strlen(dest);
    int i = 0;

    while (src[i] && i < n)
    {
        dest[dest_len + i] = src[i];
        i++;
    }
    dest[dest_len + i] = '\0';
    return (dest);
}

char *_strncpy(char *dest, char *src, int n)
{
    int i = 0;

    for (; i < n && src[i]; i++)
    {
        dest[i] = src[i];
    }
    for (; i < n; i++)
    {
        dest[i] = '\0';
    }
    return (dest);
}

int _strcmp(char *s1, char *s2)
{
    int i = 0;

    while (s1[i] && s2[i] && s1[i] == s2[i])
    {
        i++;
    }
    return (s1[i] - s2[i]);
}

char *_memset(char *s, char b, unsigned int n)
{
    unsigned int i = 0;

    while (i < n)
    {
        s[i] = b;
        i++;
    }
    return (s);
